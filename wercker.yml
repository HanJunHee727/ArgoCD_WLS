# Copyright 2017, 2018, Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.

#
#  Wercker build file for Oracle WebLogic Server Kubernetes Operator
#

box:
  id: store/oracle/serverjre
  username: $DOCKER_USERNAME
  password: $DOCKER_PASSWORD
  tag: 8

# This is the main build pipeline that builds the codebase and runs unit tests.
build:
  steps:
    - script:
        name: Hello
        code: |
          echo "Building Oracle WebLogic Server Kubernetes Operator..."
          echo "The commit id is $WERCKER_GIT_COMMIT"
    - script:
      name: Install pre-reqs
      code: |
        yum -y install tar gzip
    - java/maven:
        goals: clean install
        version: 3.5.2
        cache_repo: true
    - script:
        name: Copy built-artifacts into the image
        code: |
          mkdir /operator
          cp -R src/main/scripts/* /operator/
          cp target/weblogic-kubernetes-operator-0.1.0-alpha-SNAPSHOT.jar /operator/weblogic-kubernetes-operator.jar
    # push the image to quay.io using the GIT commit id (first 8 chars) as the tag
    # this image needs to be available to the integration-test pipeline for testing
    - internal/docker-push:
        username: $QUAY_USERNAME
        password: $QUAY_PASSWORD
        email: $QUAY_EMAIL
        repository: quay.io/markxnelson/weblogic-kubernetes-operator
        tag: $WERCKER_GIT_COMMIT
        working-dir: "/operator"
        cmd: "operator.sh"
        env: "PATH=$PATH:/operator"


# This pipeline runs the integration tests against a real k8s cluster.
integration-test:  # run in weblogic container so that wlst is available
  steps:
    - script:
      name: Run integration tests
      code: |
        # work out if we can set up a plain VM in the same compartment, that we can use as a "client" machine
        # to run the tests from, meaning NodePorts on the cluster will not need to be exposed through the OCI
        # firewall to the public internet, just within our OCI compartment.
        # terraform may have a bastion host with ssh tunneling ?

        # set up kubeconfig is set up to point to the cluster in OCI
        # create a job yaml that mounts the PV's and empties them
        kubectl create job ....
        /pipeline/source/weblogic-kubernetes-operator/src/integration-tests/bash/clean.sh
        /pipeline/weblogic-kubernetes-operator/src/integration-tests/bash/run.sh
        if [ $! == 0 ]; then
          fail()
        fi

# This pipeline promotes the docker image after tests have passed
promote-image:
  steps:
    - script:
      name: echo
      code: |
        echo "I don't do anything yet"

dev:
  steps:
    - internal/shell
